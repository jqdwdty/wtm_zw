name: "7 Timeframe"

on:
  schedule:
    - cron: '0 1 * * *'
  push:
    branches:
      - master
      - main

jobs:
  update-data:
    runs-on: ubuntu-latest
    env:
      TF: "7"  # Timeframe variable for easy global reference
      GITHUB_PAT: ${{ secrets.GH_PAT }}      
      TELEGRAM_BOT_ID: ${{ secrets.TELEGRAM_BOT_ID }}
      TELEGRAM_GROUP_ID: ${{ secrets.TELEGRAM_GROUP_ID }}
    steps:
      - name: Setup - Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}

      - name: Check and Install GitHub CLI
        run: |
          if ! command -v gh &> /dev/null; then
            echo "GitHub CLI is not installed. Installing..."
            sudo apt-get update
            sudo apt-get install -y gh
          else
            echo "GitHub CLI is already installed."
            gh --version
          fi

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GH_PAT }}" | gh auth login --with-token

      - name: Apt-get update things
        run: |
          sudo apt-get update 

      - name: Apt-get needed things
        run: |
          sudo apt-get install --no-install-recommends -y \
          libssl-dev \
          libcurl4-openssl-dev \
          libxml2-dev \
          libharfbuzz-dev \
          libfribidi-dev \
          libudunits2-dev \
          libgdal-dev

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release'

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache-version: 1
          needs: |
            any::tidyverse
            any::httr
            any::remotes
            any::shiny
            any::scales
            any::treemap
            any::here
            any::jsonlite
            any::janitor
            any::quarto
            any::highcharter
            any::lubridate
            any::gt
            any::gtExtras
            any::pacman
            any::openxlsx
            any::sf
            any::xml2
            any::rvest
            any::reticulate
            any::fs
            any::countrycode
            any::progress
            any::cli
            any::digest
            any::glue
            any::vroom
            any::prettydoc
            any::DT
            any::piggyback
            any::httr2
            any::openssl
            any::priceR

      - name: "Install arrow"
        run: Rscript 'arrow.R'

      - name: "Script - Run"
        run: |
          Rscript 'get_audiences.R' ${TF} "ZW"
          if [ -f status_${TF}.txt ]; then
            status=$(cat status_${TF}.txt)
            if [ "$status" == "changes_detected" ]; then
              # Increment the resume count as work continues
              if [ -f resume_count_${TF}.txt ]; then
                RESUME_COUNT=$(cat resume_count_${TF}.txt)
              else
                RESUME_COUNT=0
              fi
              RESUME_COUNT=$((RESUME_COUNT + 1))
              echo "Changes detected. Resume count increased to $RESUME_COUNT"
            else
              # Reset resume count as no further work is needed
              RESUME_COUNT=0
              echo "No changes detected. Resetting resume count to $RESUME_COUNT"
            fi
          else
            echo "Status file for timeframe ${TF} not found. Defaulting to trying again."
            if [ -f resume_count_${TF}.txt ]; then
              RESUME_COUNT=$(cat resume_count_${TF}.txt)
            else
              RESUME_COUNT=0
            fi
            RESUME_COUNT=$((RESUME_COUNT + 1))
            echo "Resume count increased to $RESUME_COUNT"
          fi
          # Save updated resume count
          echo $RESUME_COUNT > resume_count_${TF}.txt
          echo "RESUME_COUNT=$RESUME_COUNT" >> $GITHUB_ENV  # Persist for subsequent steps

      - name: Commit changes and Push if No Conflicts
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Determine if 'main' or 'master' exists
          if git show-ref --verify --quiet refs/heads/main; then
            TARGET_BRANCH="main"
          elif git show-ref --verify --quiet refs/heads/master; then
            TARGET_BRANCH="master"
          else
            echo "Neither 'main' nor 'master' branch exists. Skipping commit and push."
            exit 0
          fi

          # Load the persisted RESUME_COUNT from the environment
          echo "Using Resume Count: $RESUME_COUNT"
      
          # Check if RESUME_COUNT is empty or zero
          if [ -z "$RESUME_COUNT" ] || [ "${RESUME_COUNT:-0}" -eq 0 ]; then
            echo "RESUME_COUNT is empty or zero. Skipping commit and push."
            exit 0
          fi

          # Check if a workflow with this specific TF is already running or queued
          RUNNING_JOBS=$(gh run list --json name,status --jq '.[] | select(.name | test(".*Resume ${TF} TF.*")) | select(.status == "in_progress" or .status == "queued")')
          if [ ! -z "$RUNNING_JOBS" ]; then
            echo "A job with timeframe ${TF} is already running or queued. Skipping commit and push."
            exit 0
          fi

          # Stage and commit all changes, including resume count
          git add -A
          git commit -m "#$RESUME_COUNT Resume ${TF} TF: $(date +"%Y-%m-%d %H:%M:%S")" || echo "No changes to commit"
      
          # Push changes to the determined branch
          git push --force origin $TARGET_BRANCH
        env:
          RESUME_COUNT: ${{ env.RESUME_COUNT }}
